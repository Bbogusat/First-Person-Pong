3D Pong
	The project is to create a 3-dimensional version of the game pong. The game pong is a simulation of air hockey, so there will be a table with a goal at each end, a ball that moves from side to side inside the boundaries of the table, and a paddle at each end to block the ball from entering the goal. For our implementation, the user will play against him/herself, and to implement this, when the ball is blocked with the paddle, the game will pause and the camera will be rotated to the opposite side, and now the user will have control of the opponent, so they play against him/herself. The game will display a score that represents the rally count, how many times the user was able to block the ball.
	For design and implementation, the game starts by creating a 3-dimensional table object, and maps an air hockey table texture to the top surface. It then creates the ball object and places it above the table surface in the middle of the table, and it creates two rectangular prisms that act as the paddles, and it places them on opposite sides of the table. To begin the simulation, the user must click the screen, when the user clicks, the ball will be animated. The program will use frame by frame animation to update the position of the ball on the table. The ball will be bounded to the coordinates of the sides of the table, so when it hits either the right or left side of the table, it will be rebounded back. If the ball comes in contact with the side that the user is closest to(relative to the camera angle), then they have allowed a goal. In this case, the game will display the rally count, and the user can click the screen to play again. If the user blocks the ball with the paddle, then the ball will be rebounded in the opposite direction. In this case the ball will stop moving. The camera will be rotated to the opposite side of the table, giving the user the perspective of the opposite player, and control of the opposite players paddle. Once the camera rotation is finished, the ball resumes moving.
Schedule:
Friday, Nov 25 - Table, paddle, and ball objects created and drawn to screen, with correct 			   scaling and initial positions. Camera view set to correct initial position.
Monday, Nov 28 - Completed key mapping to control the paddle objects.
Wednesday, Nov 30 - Completed animation for ball object with rebounding physics and score 			             increment.
Friday, Dec 2 - Camera rotation animation completed and game over screen implemented.
References and Tools: OpenGL, 
